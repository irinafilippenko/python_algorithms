# 1. Подсчитать, сколько было выделено памяти под переменные в ранее
# разработанных программах в рамках первых трех уроков. Проанализировать
# результат и определить программы с наиболее эффективным использованием памяти.
# Примечание: По аналогии с эмпирической оценкой алгоритмов идеальным решением будет:
#
# ● выбрать хорошую задачу, которую имеет смысл оценивать по памяти
# (укажите какую задачу вы взяли в комментарии);
#
# ● написать 3 варианта кода (один у вас уже есть);
#
# ● проанализировать 3 варианта и выбрать оптимальный;
#
# ● результаты анализа (количество занятой памяти в вашей среде разработки)
# вставить в виде комментариев в файл с кодом. Не забудьте указать версию и
# разрядность вашей ОС и интерпретатора Python;
#
# ● написать общий вывод: какой из трёх вариантов лучше и почему.
#
# Надеемся, что вы не испортили программы, добавив в них множество sys.getsizeof
# после каждой переменной, а проявили творчество, фантазию и создали
# универсальный код для замера памяти.

# 5. В массиве найти максимальный отрицательный элемент.
# Вывести на экран его значение и позицию в массиве.
# Примечание к задаче: пожалуйста не путайте «минимальный»
# и «максимальный отрицательный». Это два абсолютно разных значения.

from random import randint
from sys import getsizeof


def create_array(n):
    SIZE = n
    MIN_ITEM = -100
    MAX_ITEM = 100

    return [randint(MIN_ITEM, MAX_ITEM) for _ in range(SIZE)]


def max_neg_1(n):
    number_array = create_array(n)
    max_neg_number = 0
    max_neg_index = 0

    for i, number in enumerate(number_array):
        if number < 0 and (max_neg_number == 0 or number > max_neg_number):
            max_neg_number = number
            max_neg_index = i

    # return max_neg_index, max_neg_number
    return locals()

def max_neg_2(n):
    number_array = create_array(n)
    i = 0
    max_neg_index = -1

    while i < len(number_array):
        if number_array[i] < 0 and max_neg_index == -1:
            max_neg_index = i
        elif 0 > number_array[i] > number_array[max_neg_index]:
            max_neg_index = i
        i += 1

    # return max_neg_index, number_array[max_neg_index]
    return locals()


def max_neg_3(n):
    number_array = create_array(n)
    number_array_neg = [number for number in number_array if number < 0]
    max_neg_number = max(number_array_neg)
    max_neg_index = number_array.index(max_neg_number)

    # return max_neg_index, max_neg_number
    return locals()

def my_size(data, total_size):
    data_size = getsizeof(data)
    total_size += data_size

    print(f'значение - {data} \nтип- {type(data)} \nколичество памяти - {data_size}')
    print(f'Суммарное количество занятой памяти: {total_size}')

    if hasattr(data, '__iter__'):
        for item in data:
            total_size = my_size(item, total_size)

    return total_size


def func_size(func, n):
    total_size = 0

    for key, value in func(n).items():
        print(f'Переменная - {key}')
        total_size = my_size(value, total_size)
        print('-'*50)

    return total_size

# print(f'Суммарное количество занятой памяти функции № 1: {func_size(max_neg_1, 20)}')
# print(f'Суммарное количество занятой памяти функции № 2: {func_size(max_neg_2, 20)}')
# print(f'Суммарное количество занятой памяти функции № 3: {func_size(max_neg_3, 20)}')


# Windows 10 Pro 21H1 64-разрядная операционная система
# Python 3.8.9

# Переменная - n
# значение - 20
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 28
# --------------------------------------------------
# Переменная - number_array
# значение - [-23, 71, 47, 43, 11, -62, 45, 17, 60, 43, -95, -33, 2, 75, 11, 22, -12, 76, 6, -9]
# тип- <class 'list'>
# количество памяти - 256
# Суммарное количество занятой памяти: 284
# значение - -23
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 312
# значение - 71
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 340
# значение - 47
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 368
# значение - 43
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 396
# значение - 11
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 424
# значение - -62
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 452
# значение - 45
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 480
# значение - 17
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 508
# значение - 60
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 536
# значение - 43
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 564
# значение - -95
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 592
# значение - -33
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 620
# значение - 2
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 648
# значение - 75
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 676
# значение - 11
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 704
# значение - 22
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 732
# значение - -12
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 760
# значение - 76
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 788
# значение - 6
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 816
# значение - -9
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 844
# --------------------------------------------------
# Переменная - max_neg_number
# значение - -9
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 872
# --------------------------------------------------
# Переменная - max_neg_index
# значение - 19
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 900
# --------------------------------------------------
# Переменная - i
# значение - 19
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 928
# --------------------------------------------------
# Переменная - number
# значение - -9
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 956
# --------------------------------------------------
# Суммарное количество занятой памяти функции № 1: 956



# Переменная - n
# значение - 20
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 28
# --------------------------------------------------
# Переменная - number_array
# значение - [47, 23, 83, -61, -71, 64, -27, -98, 44, 55, -97, -88, 77, -65, 34, 77, -89, -35, 24, -58]
# тип- <class 'list'>
# количество памяти - 256
# Суммарное количество занятой памяти: 284
# значение - 47
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 312
# значение - 23
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 340
# значение - 83
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 368
# значение - -61
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 396
# значение - -71
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 424
# значение - 64
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 452
# значение - -27
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 480
# значение - -98
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 508
# значение - 44
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 536
# значение - 55
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 564
# значение - -97
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 592
# значение - -88
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 620
# значение - 77
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 648
# значение - -65
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 676
# значение - 34
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 704
# значение - 77
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 732
# значение - -89
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 760
# значение - -35
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 788
# значение - 24
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 816
# значение - -58
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 844
# --------------------------------------------------
# Переменная - i
# значение - 20
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 872
# --------------------------------------------------
# Переменная - max_neg_index
# значение - 6
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 900
# --------------------------------------------------
# Суммарное количество занятой памяти функции № 2: 900



# Переменная - n
# значение - 20
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 28
# --------------------------------------------------
# Переменная - number_array
# значение - [-34, -88, -32, -63, -76, -29, 0, -96, 14, 6, 80, -29, 29, 1, -89, -73, 53, 9, 28, -66]
# тип- <class 'list'>
# количество памяти - 256
# Суммарное количество занятой памяти: 284
# значение - -34
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 312
# значение - -88
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 340
# значение - -32
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 368
# значение - -63
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 396
# значение - -76
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 424
# значение - -29
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 452
# значение - 0
# тип- <class 'int'>
# количество памяти - 24
# Суммарное количество занятой памяти: 476
# значение - -96
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 504
# значение - 14
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 532
# значение - 6
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 560
# значение - 80
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 588
# значение - -29
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 616
# значение - 29
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 644
# значение - 1
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 672
# значение - -89
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 700
# значение - -73
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 728
# значение - 53
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 756
# значение - 9
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 784
# значение - 28
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 812
# значение - -66
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 840
# --------------------------------------------------
# Переменная - number_array_neg
# значение - [-34, -88, -32, -63, -76, -29, -96, -29, -89, -73, -66]
# тип- <class 'list'>
# количество памяти - 184
# Суммарное количество занятой памяти: 1024
# значение - -34
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 1052
# значение - -88
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 1080
# значение - -32
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 1108
# значение - -63
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 1136
# значение - -76
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 1164
# значение - -29
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 1192
# значение - -96
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 1220
# значение - -29
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 1248
# значение - -89
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 1276
# значение - -73
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 1304
# значение - -66
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 1332
# --------------------------------------------------
# Переменная - max_neg_number
# значение - -29
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 1360
# --------------------------------------------------
# Переменная - max_neg_index
# значение - 5
# тип- <class 'int'>
# количество памяти - 28
# Суммарное количество занятой памяти: 1388
# --------------------------------------------------
# Суммарное количество занятой памяти функции № 3: 1388


# Вторая функция, на первый взгляд, выигрывает у первой (956 байт против 900) из-за наличия
# в первой дополнительной переменной max_neg_number и переменных цикла. Но, если оптимизировать
# вторую функцию (в цикле while ввести вместо len(number_array) дополнительную переменную,
# чтобы значение длины не вычислялось каждый шаг цикла), то разница получается совсем
# незначительная.

# Массив number_array_neg каждый раз генерируется разный в третьей функции (с разным количеством
# отрицательных элементов), но я не стала задавать вручную один и тот же исходный массив
# number_array, поскольку разница заметна в любом случае.

# Третья функция заметно отстаёт от первых двух (1388 байт) из-за ввода дополнительного массива
# number_array_neg с отрицательными элементами (в зависимости от размера исходного массива
# и количества отрицательных элементов может достигать 28 х длина массива).
